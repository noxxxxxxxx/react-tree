import{_ as n,o as a,c as s,a as e,b as t}from"./app-d1dc930e.js";const p={},o=t(`<h1 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h1><h2 id="theme" tabindex="-1"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> theme</h2><p>Set a default theme ui for tree component</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Each theme has default configurations, but you can override them by declaring specific attributes.</p></div><ul><li><p><strong>Default</strong> <code>default</code></p></li><li><p><strong>Type</strong></p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Theme <span class="token punctuation">{</span>
  figma <span class="token operator">=</span> <span class="token string">&quot;figma&quot;</span><span class="token punctuation">,</span>
  <span class="token keyword">default</span> <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Example</strong></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tree</span></span> <span class="token attr-name">theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>figma<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h2><p>Customize treeNode icon.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If the icon field is of string type, it will be rendered as an img element.</p><p>The icon field in the treeData will also be rendered.</p></div><ul><li><p><strong>Default</strong> <code>-</code></p></li><li><p><strong>Type</strong></p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">icon</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> ReactNode<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>Example</strong></li></ul><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">const</span> <span class="token function-variable function">icon</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>40<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tree</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>icon<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="switchericon" tabindex="-1"><a class="header-anchor" href="#switchericon" aria-hidden="true">#</a> switcherIcon</h2><p>The icon displayed when expanding or collapsing</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>For better performance, collapsible effect implemented using checkbox. Therefore, the direction of the passed element needs to be considered.</p></div><ul><li><p><strong>Default</strong> <code>ReactNode</code> arrow icon</p></li><li><p><strong>Type</strong></p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">switcherIcon</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> ReactNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Example</strong></li></ul><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> DownOne <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@icon-park/react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">switcherIcon</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOne</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tree</span></span> <span class="token attr-name">switcherIcon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>switcherIcon<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indentsize" tabindex="-1"><a class="header-anchor" href="#indentsize" aria-hidden="true">#</a> indentSize</h2><p>Each tree node indentation spacing</p><ul><li><p><strong>Default</strong> <code>15</code></p></li><li><p><strong>Unit</strong> <code>px</code></p></li><li><p><strong>Type</strong> <code>number</code></p></li></ul><h2 id="foldicondisplay" tabindex="-1"><a class="header-anchor" href="#foldicondisplay" aria-hidden="true">#</a> foldIconDisplay</h2><p>When to display the collapse icon.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If the theme is <code>Figma</code> the value of <code>foldIconDisplay</code> will be set to <code>hover</code>, the collapse icon will be displayed only when the user hovers over the tree node that can be collapsed or expanded.</p></div><ul><li><p><strong>Default</strong> <code>-</code></p></li><li><p><strong>Type</strong></p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> FoldIconDisplay <span class="token punctuation">{</span>
  always <span class="token operator">=</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
  hover <span class="token operator">=</span> <span class="token string">&quot;hover&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="draggable" tabindex="-1"><a class="header-anchor" href="#draggable" aria-hidden="true">#</a> draggable</h2><p>Determining whether a treeNode can be dragged or not.</p><ul><li><p><strong>Default</strong> <code>false</code></p></li><li><p><strong>Type</strong> <code>boolean</code></p></li></ul><h2 id="selectable" tabindex="-1"><a class="header-anchor" href="#selectable" aria-hidden="true">#</a> selectable</h2><p>Whether a tree node is selectable or not.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In the default theme, only a single node can be selected.</p></div><ul><li><p><strong>Default</strong> <code>true</code></p></li><li><p><strong>Type</strong> <code>boolean</code></p></li></ul><h2 id="ondragstart" tabindex="-1"><a class="header-anchor" href="#ondragstart" aria-hidden="true">#</a> onDragStart</h2><ul><li><strong>Type</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">onDragStart</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>
  event<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token punctuation">;</span>
  node<span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ondragenter" tabindex="-1"><a class="header-anchor" href="#ondragenter" aria-hidden="true">#</a> onDragEnter</h2><ul><li><strong>Type</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">onDragStart</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>
  event<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token punctuation">;</span>
  node<span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ondragend" tabindex="-1"><a class="header-anchor" href="#ondragend" aria-hidden="true">#</a> onDragEnd</h2><ul><li><strong>Type</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">onDragEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>
  event<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token punctuation">;</span>
  node<span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ondragover" tabindex="-1"><a class="header-anchor" href="#ondragover" aria-hidden="true">#</a> onDragOver</h2><ul><li><strong>Type</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">onDragOver</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>
  event<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token punctuation">;</span>
  node<span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ondragleave" tabindex="-1"><a class="header-anchor" href="#ondragleave" aria-hidden="true">#</a> onDragLeave</h2><ul><li><strong>Type</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">onDragLeave</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>
  event<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token punctuation">;</span>
  node<span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ondrop" tabindex="-1"><a class="header-anchor" href="#ondrop" aria-hidden="true">#</a> onDrop</h2><ul><li><strong>Type</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">onDrop</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>
  event<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token punctuation">;</span>
  node<span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>
  dragNodes<span class="token operator">:</span> TreeNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  dragNodesKeys<span class="token operator">:</span> TreeNode<span class="token punctuation">[</span><span class="token string">&quot;anchor&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55);function c(l,i){return a(),s("div",null,[o,e(" - **Default** `string`\n\n- **Type**\n\n```ts\ntype\n````\n\n- **Example** ")])}const u=n(p,[["render",c],["__file","index.html.vue"]]);export{u as default};
